diff --git a/search_api.services.yml b/search_api.services.yml
index 867a866d..056c5196 100644
--- a/search_api.services.yml
+++ b/search_api.services.yml
@@ -66,12 +66,6 @@ services:
     class: Drupal\search_api\Utility\PluginHelper
     arguments: ['@plugin.manager.search_api.datasource', '@plugin.manager.search_api.processor', '@plugin.manager.search_api.tracker']
 
-  search_api.post_request_indexing:
-    class: Drupal\search_api\Utility\PostRequestIndexing
-    arguments: ['@entity_type.manager']
-    tags:
-      - { name: needs_destruction }
-
   search_api.query_helper:
     class: Drupal\search_api\Utility\QueryHelper
     arguments: ['@request_stack', '@module_handler', '@plugin.manager.search_api.parse_mode']
@@ -94,3 +88,9 @@ services:
     class: Drupal\search_api\Contrib\ViewsBulkOperationsEventSubscriber
     tags:
       - { name: event_subscriber }
+
+  search_api.post_response:
+    class: Drupal\search_api\EventSubscriber\PostResponseEventSubscriber
+    arguments: ['@entity_type.manager']
+    tags:
+      - { name: event_subscriber }
diff --git a/src/Utility/PostRequestIndexing.php b/src/Utility/PostRequestIndexing.php
index 37ef9f64..5bc9e959 100644
--- a/src/Utility/PostRequestIndexing.php
+++ b/src/Utility/PostRequestIndexing.php
@@ -10,7 +10,7 @@ use Drupal\search_api\SearchApiException;
 /**
  * Provides a service for indexing items at the end of the page request.
  */
-class PostRequestIndexing implements PostRequestIndexingInterface, DestructableInterface {
+class PostRequestIndexing implements PostRequestIndexingInterface {
 
   use LoggerTrait;
 
@@ -50,67 +50,6 @@ class PostRequestIndexing implements PostRequestIndexingInterface, DestructableI
     $this->entityTypeManager = $entity_type_manager;
   }
 
-  /**
-   * {@inheritdoc}
-   */
-  public function destruct() {
-    foreach ($this->operations as $index_id => $item_ids) {
-      try {
-        $storage = $this->entityTypeManager->getStorage('search_api_index');
-      }
-      // @todo Replace with multi-catch for InvalidPluginDefinitionException and
-      //   PluginNotFoundException once we depend on PHP 7.1+.
-      catch (\Exception $e) {
-        // It might be possible that the module got uninstalled during the rest
-        // of the page request, or something else happened. To be on the safe
-        // side, catch the exception in case the entity type isn't found.
-        return;
-      }
-
-      /** @var \Drupal\search_api\IndexInterface $index */
-      $index = $storage->load($index_id);
-      // It's possible that the index was deleted in the meantime, so make sure
-      // it's actually there.
-      if (!$index) {
-        continue;
-      }
-
-      try {
-        // In case there are lots of items to index, take care to not load/index
-        // all of them at once, so we don't run out of memory. Using the index's
-        // cron batch size should always be safe.
-        $batch_size = $index->getOption('cron_limit', 50) ?: 50;
-        if ($batch_size > 0) {
-          $item_ids_batches = array_chunk($item_ids, $batch_size);
-        }
-        else {
-          $item_ids_batches = [$item_ids];
-        }
-        foreach ($item_ids_batches as $item_ids_batch) {
-          $items = $index->loadItemsMultiple($item_ids_batch);
-          if ($items) {
-            $index->indexSpecificItems($items);
-          }
-        }
-      }
-      catch (SearchApiException $e) {
-        $vars['%index'] = $index->label();
-        watchdog_exception('search_api', $e, '%type while trying to index items on %index: @message in %function (line %line of %file).', $vars);
-      }
-
-      // We usually shouldn't be called twice in a page request, but no harm in
-      // being too careful: Remove the operation once it was executed correctly.
-      unset($this->operations[$index_id]);
-    }
-
-    // Make sure that no new items were added while processing the previous
-    // ones. Otherwise, call this method again to index those as well. (But also
-    // guard against infinite recursion.)
-    if ($this->operations && ++$this->recursion <= 5) {
-      $this->destruct();
-    }
-  }
-
   /**
    * {@inheritdoc}
    */
