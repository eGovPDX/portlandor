diff --git a/modules/gnode/gnode.links.action.yml b/modules/gnode/gnode.links.action.yml
index 95dd7b5..9213e57 100644
--- a/modules/gnode/gnode.links.action.yml
+++ b/modules/gnode/gnode.links.action.yml
@@ -1,11 +1,11 @@
 group_content.group_node_relate_page:
   route_name: 'entity.group_content.group_node_relate_page'
-  title: 'Relate node'
+  title: 'Relate content'
   appears_on:
     - 'view.group_nodes.page_1'
 
 group_content.group_node_add_page:
   route_name: 'entity.group_content.group_node_add_page'
-  title: 'Create node'
+  title: 'Create group content'
   appears_on:
     - 'view.group_nodes.page_1'
diff --git a/modules/gnode/src/Controller/GroupNodeController.php b/modules/gnode/src/Controller/GroupNodeController.php
index 8812277..4f9bdab 100644
--- a/modules/gnode/src/Controller/GroupNodeController.php
+++ b/modules/gnode/src/Controller/GroupNodeController.php
@@ -75,8 +75,8 @@ class GroupNodeController extends GroupContentController {
 
         $t_args = ['%node_type' => $bundle_label];
         $description = $create_mode
-          ? $this->t('Create a node of type %node_type in the group.', $t_args)
-          : $this->t('Add an existing node of type %node_type to the group.', $t_args);
+          ? $this->t('Create content of type %node_type in the group.', $t_args)
+          : $this->t('Add existing content of type %node_type to the group.', $t_args);
 
         $build['#bundles'][$bundle_name]['label'] = $bundle_label;
         $build['#bundles'][$bundle_name]['description'] = $description;
diff --git a/modules/gnode/src/Plugin/GroupContentEnabler/GroupNode.php b/modules/gnode/src/Plugin/GroupContentEnabler/GroupNode.php
index 033f953..34d8a97 100644
--- a/modules/gnode/src/Plugin/GroupContentEnabler/GroupNode.php
+++ b/modules/gnode/src/Plugin/GroupContentEnabler/GroupNode.php
@@ -13,8 +13,8 @@ use Drupal\Core\Form\FormStateInterface;
  *
  * @GroupContentEnabler(
  *   id = "group_node",
- *   label = @Translation("Group node"),
- *   description = @Translation("Adds nodes to groups both publicly and privately."),
+ *   label = @Translation("Group content"),
+ *   description = @Translation("Adds content to groups both publicly and privately."),
  *   entity_type_id = "node",
  *   entity_access = TRUE,
  *   reference_label = @Translation("Title"),
diff --git a/modules/gnode/src/Plugin/GroupContentEnabler/GroupNodeDeriver.php b/modules/gnode/src/Plugin/GroupContentEnabler/GroupNodeDeriver.php
index ecc1a91..03d8ec0 100644
--- a/modules/gnode/src/Plugin/GroupContentEnabler/GroupNodeDeriver.php
+++ b/modules/gnode/src/Plugin/GroupContentEnabler/GroupNodeDeriver.php
@@ -16,7 +16,7 @@ class GroupNodeDeriver extends DeriverBase {
 
       $this->derivatives[$name] = [
         'entity_bundle' => $name,
-        'label' => t('Group node (@type)', ['@type' => $label]),
+        'label' => t('Group @type', ['@type' => $label]),
         'description' => t('Adds %type content to groups both publicly and privately.', ['%type' => $label]),
       ] + $base_plugin_definition;
     }
diff --git a/modules/gnode/src/Routing/GroupNodeRouteProvider.php b/modules/gnode/src/Routing/GroupNodeRouteProvider.php
index 4d8c76a..c05a508 100644
--- a/modules/gnode/src/Routing/GroupNodeRouteProvider.php
+++ b/modules/gnode/src/Routing/GroupNodeRouteProvider.php
@@ -33,7 +33,7 @@ class GroupNodeRouteProvider {
     $routes['entity.group_content.group_node_relate_page'] = new Route('group/{group}/node/add');
     $routes['entity.group_content.group_node_relate_page']
       ->setDefaults([
-        '_title' => 'Relate node',
+        '_title' => 'Relate content',
         '_controller' => '\Drupal\gnode\Controller\GroupNodeController::addPage',
       ])
       ->setRequirement('_group_permission', implode('+', $permissions_add))
@@ -43,7 +43,7 @@ class GroupNodeRouteProvider {
     $routes['entity.group_content.group_node_add_page'] = new Route('group/{group}/node/create');
     $routes['entity.group_content.group_node_add_page']
       ->setDefaults([
-        '_title' => 'Create node',
+        '_title' => 'Create content',
         '_controller' => '\Drupal\gnode\Controller\GroupNodeController::addPage',
         'create_mode' => TRUE,
       ])
diff --git a/src/Entity/Controller/GroupContentController.php b/src/Entity/Controller/GroupContentController.php
index ec2192c..3ce7d40 100644
--- a/src/Entity/Controller/GroupContentController.php
+++ b/src/Entity/Controller/GroupContentController.php
@@ -15,6 +15,8 @@ use Drupal\group\Entity\GroupInterface;
 use Drupal\user\PrivateTempStoreFactory;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 use Symfony\Component\HttpFoundation\RedirectResponse;
+use Drupal\node\Entity\NodeType;
+use Drupal\media\Entity\MediaType;
 
 /**
  * Returns responses for GroupContent routes.
@@ -375,8 +377,18 @@ class GroupContentController extends ControllerBase {
   public function createFormTitle(GroupInterface $group, $plugin_id) {
     /** @var \Drupal\group\Plugin\GroupContentEnablerInterface $plugin */
     $plugin = $group->getGroupType()->getContentPlugin($plugin_id);
-    $group_content_type = GroupContentType::load($plugin->getContentTypeConfigId());
-    return $this->t('Create @name', ['@name' => $group_content_type->label()]);
+    $entity_type = $plugin->getEntityTypeId();
+    switch ($entity_type) {
+      case "media":
+        $content_type = MediaType::load($plugin->getEntityBundle());
+        break;
+      case "node":
+        $content_type = NodeType::load($plugin->getEntityBundle());
+        break;
+      default:
+        $content_type = "undefined";
+    }
+    return $this->t('Create @name in @group', ['@name' => $content_type->label(), '@group' => $group->label()]);
   }
 
 }
