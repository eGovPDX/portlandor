diff --git a/modules/bootstrap_datepicker_exposed_filter/bootstrap_datepicker_exposed_filter.info.yml b/modules/bootstrap_datepicker_exposed_filter/bootstrap_datepicker_exposed_filter.info.yml
new file mode 100644
index 0000000..770b058
--- /dev/null
+++ b/modules/bootstrap_datepicker_exposed_filter/bootstrap_datepicker_exposed_filter.info.yml
@@ -0,0 +1,9 @@
+name: Bootstrap Utilities - Bootstrap Datepicker Exposed Filter
+description: Implements Bootstrap Datepicker in views exposed filters.
+package: Bootstrap Utilities
+type: module
+version: 8.x-1.x
+core: 8.x
+
+dependencies:
+  - 'bootstrap_datepicker'
\ No newline at end of file
diff --git a/modules/bootstrap_datepicker_exposed_filter/bootstrap_datepicker_exposed_filter.module b/modules/bootstrap_datepicker_exposed_filter/bootstrap_datepicker_exposed_filter.module
new file mode 100644
index 0000000..3c14426
--- /dev/null
+++ b/modules/bootstrap_datepicker_exposed_filter/bootstrap_datepicker_exposed_filter.module
@@ -0,0 +1,74 @@
+<?php
+
+/**
+ * @file
+ * Main module file bootstrap_datepicker_exposed. 
+ * Includes form_alter hook to enable datepicker for views exposed filters.
+ */
+
+use Drupal\Core\Routing\RouteMatchInterface;
+use Drupal\Core\Form\FormStateInterface;
+use Drupal\bootstrap_datepicker_exposed_filter\AttributeHelper;
+
+/**
+ * Implements hook_form_BASE_FORM_ID_alter().
+ */
+function bootstrap_datepicker_exposed_filter_form_views_exposed_form_alter(&$form, FormStateInterface $form_state, $form_id) {
+
+  /** @var \Drupal\views\ViewExecutable $view */
+  $view = $form_state->getStorage()['view'];
+
+  if ($view->preview === NULL) {
+    $filters = $view->getHandlers('filter');
+
+    // Use default template from helper.
+    $attributes = AttributeHelper::defaultWidget();
+
+    $active = FALSE;
+
+    foreach ($filters as $id => $filter) {
+      // Only take filters which are exposed and date based.
+      if (isset($filter['exposed']) && $filter['exposed'] && $filter['plugin_id'] === 'datetime') {
+        // Only handle date based value, no offset exposed dates.
+        if ($filter['value']['type'] === 'date' || $filter['value']['type'] === 'offset') {
+          $active = TRUE;
+          $field_name = $filter['id'];
+          $attributes['data-provide'] = 'datepicker';
+
+          // Based on selected filters attach attributes on proper place.
+          switch ($filter['operator']) {
+            case 'between':
+            case 'not between':
+              $form[$field_name]['min']['#attributes'] = $attributes;
+              $form[$field_name]['max']['#attributes'] = $attributes;
+
+              // Adjust titles.
+              $field_title_min = $form[$field_name]['min']['#title'];
+              $field_title_max = $form[$field_name]['max']['#title'];
+              $form[$field_name]['min']['#title'] = "Date range between";// $field_title_min;// . ' ( ' . t('From') . ' )';
+              $form[$field_name]['max']['#title'] = "And"; //$field_title_max;// . ' ( ' . t('To') . ' )';
+
+              // On between filters when end value is empty, sometimes filters
+              // are not working. So set end value.
+              $input = $form_state->getUserInput();
+              if (!empty($input[$field_name]['min']) && empty($input[$field_name]['max'])) {
+                $timestamp = strtotime($input[$field_name]['min']) + 86400;
+                $input[$field_name]['max'] = date('Y-m-d h:i:s', $timestamp);
+                $form_state->setUserInput($input);
+              }
+              break;
+
+            default:
+              $form[$field_name]['#attributes'] = $attributes;
+          }
+        }
+      }
+    }
+
+    // If we have found filters. Attach library.
+    if ($active) {
+      $form['#attached']['library'][] = 'bootstrap_datepicker/datepicker';
+    }
+  }
+
+}
diff --git a/modules/bootstrap_datepicker_exposed_filter/src/AttributeHelper.php b/modules/bootstrap_datepicker_exposed_filter/src/AttributeHelper.php
new file mode 100644
index 0000000..d1af8be
--- /dev/null
+++ b/modules/bootstrap_datepicker_exposed_filter/src/AttributeHelper.php
@@ -0,0 +1,33 @@
+<?php
+
+namespace Drupal\bootstrap_datepicker_exposed_filter;
+
+use Drupal\Component\Serialization\Json;
+
+/**
+ * Class AttributeHelper
+ *
+ * @package Drupal\single_datetime
+ */
+class AttributeHelper {
+
+  /**
+   * Attributes for textfield (or any non single_datetime field types).
+   *
+   * @return array
+   *   Return attributes.
+   */
+  public static function defaultWidget() {
+    return [
+      'data-hour-format' => 24,
+      'data-first-day' => \Drupal::config('system.date')->get('first_day'),
+      'data-disable-days' => [],
+      'data-allow-times' => 60,
+      'data-allowed-hours' => Json::encode(range(0, 23)),
+      'data-inline' => '0',
+      'data-mask' => FALSE,
+      'data-datetimepicker-theme' => 'default',
+      'data-single-date-time' => 'datetime',
+    ];
+  }
+}
