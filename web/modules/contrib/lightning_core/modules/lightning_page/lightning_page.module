<?php

use Drupal\field\FieldConfigInterface;
use Drupal\node\Entity\NodeType;
use Drupal\workflows\Entity\Workflow;

/**
 * Implements hook_modules_installed().
 */
function lightning_page_modules_installed(array $modules) {
  if (Drupal::isConfigSyncing()) {
    return;
  }

  if (in_array('content_moderation', $modules, TRUE)) {
    $workflow = Workflow::load('editorial');
    /** @var \Drupal\content_moderation\Plugin\WorkflowType\ContentModerationInterface $plugin */
    $plugin = $workflow->getTypePlugin();
    $plugin->addEntityTypeAndBundle('node', 'page');
    $workflow->save();
  }

  if (in_array('menu_ui', $modules, TRUE)) {
    NodeType::load('page')
      ->setThirdPartySetting('menu_ui', 'available_menus', ['main'])
      ->setThirdPartySetting('menu_ui', 'parent', 'main:')
      ->save();
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function lightning_page_field_config_insert(FieldConfigInterface $field) {
  // Don't do anything during config sync.
  if (\Drupal::isConfigSyncing()) {
    return;
  }
  elseif ($field->id() == 'node.page.field_meta_tags') {
    entity_get_display('node', 'page', 'default')
      ->setComponent('field_meta_tags', [
        'type' => 'metatag_empty_formatter',
        'region' => 'content',
      ])
      ->save();

    entity_get_form_display('node', 'page', 'default')
      ->setComponent('field_meta_tags', [
        'type' => 'metatag_firehose',
        'region' => 'content',
      ])
      ->save();
  }
}
