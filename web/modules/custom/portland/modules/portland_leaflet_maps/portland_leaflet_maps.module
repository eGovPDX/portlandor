<?php
/*
 * @file
 * "Portland Leaflet Maps" adds PortlandMaps layers to the Leaflet module.
 *
 * All maps support zoom levels 0..18, except where stated otherwise.
 */
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Solarium\Core\Query\QueryInterface;
use Drupal\Component\Utility\Unicode;
use Drupal\views\ViewExecutable;

const LEAFLET_MORE_MAPS_NO_CUSTOM_MAPS = 3;

/**
 * Implements hook_leaflet_map_info().
 *
 * @return array of map info (includes provider URL, attribution, map features)
 */
function portland_leaflet_maps_leaflet_map_info() {

  $default_settings = array(
    'attributionControl' => TRUE,
    'closePopupOnClick'  => TRUE,
    'doubleClickZoom'    => TRUE,
    'dragging'           => TRUE,
    'fadeAnimation'      => TRUE,
    'layerControl'       => FALSE,
    'maxZoom'            => 18,
    'minZoom'            => 0,
    'scrollWheelZoom'    => TRUE,
    'touchZoom'          => TRUE,
    'trackResize'        => TRUE,
    // Don't specify zoom, if you want to use Auto-box.
    // 'zoom'               =>  2,
    'zoomAnimation'      => TRUE,
    'zoomControl'        => TRUE,
  );
  $map_info = array();
  _portland_leaflet_maps_assemble_default_map_info($map_info, $default_settings);

  return $map_info;
}

/**
 * Preprocess function for leaflet_more_maps.
 */
function portland_leaflet_maps_preprocess_leaflet_map(&$variables) {
  $variables['#attached']['library'][] = 'portland_leaflet_maps/portland_leaflet_maps';
}

/**
 * Implements hook_leaflet_map_info_alter().
 */
function portland_leaflet_maps_leaflet_map_info_alter(&$map_info) {
  @ksort($map_info, SORT_NATURAL | SORT_FLAG_CASE);
}

/**
 * Assemble default map info.
 */
function _portland_leaflet_maps_assemble_default_map_info(&$map_info, $default_settings = array()) {
  // Coordinate format used by PortlandMaps
  $zyx_only = '{z}/{y}/{x}';

  $attr_portlandmaps = '<a href="https://www.portlandmaps.com">PortlandMaps</a>';

  $map_info['portlandmaps_color'] = array(
    'label' => 'PortlandMaps.com Basemap_Color_Complete (zoom 0..22)',
    'description' => t('portlandmaps.com Basemap_Color_Complete Maps'),
    'settings' =>  $default_settings + ['maxZoom' => 22],
    'layers' => [
      'layer' => [
        'urlTemplate' => "https://www.portlandmaps.com/arcgis/rest/services/Public/Basemap_Color_Complete/MapServer/tile/$zyx_only",
        'options' => [
          'attribution' => $attr_portlandmaps,
        ],
      ],
    ],
  );

  $map_info['portlandmaps_park'] = array(
    'label' => 'PortlandMaps.com Park_Amenities (zoom 0..22)',
    'description' => t('portlandmaps.com Park_Amenities Maps'),
    'settings' =>  $default_settings + ['maxZoom' => 22],
    'layers' => [
      'layer' => [
        'urlTemplate' => "https://www.portlandmaps.com/arcgis/rest/services/Public/Basemap_Color_Complete/MapServer/tile/$zyx_only",
        'options' => [
          'attribution' => $attr_portlandmaps,
        ],
      ],
    ],
  );
}

/**
 * Implements hook_entity_view_alter.
 */
function portland_leaflet_maps_entity_view_alter(array &$build,
                            EntityInterface $entity,
                            EntityViewDisplayInterface $display) {
  // Abort if this function is called for a "related" item on a page
  if ($display->getMode() == "related") return;

  // Do not use portlandmaps_id when viewing Park Finder
  $current_path = \Drupal::service('path.current')->getPath();
  if (strpos($current_path, '/parks/search') === 0) return;

  // If the editor would like to load map from PortlandMaps, clear the geo_map field
  if ( $entity->hasField('field_portlandmaps_layer') && $entity->hasField('field_portlandmaps_id') && $entity->hasField('field_geo_map') ) {
    if (!$entity->hasField('field_load_map_from_portlandmaps') ||
        ($entity->hasField('field_load_map_from_portlandmaps') && $entity->field_load_map_from_portlandmaps->value ) ) {
          $entity->field_geo_map->value = '';
          $build['#attached']['drupalSettings']['portlandmaps_layer'] = $entity->field_portlandmaps_layer->value;
          $build['#attached']['drupalSettings']['portlandmaps_id'] = $entity->field_portlandmaps_id->value;
    }
  }
}

/**
 * Implements hook_views_pre_render().
 */
function portland_leaflet_maps_views_pre_render(ViewExecutable $view) {
  if ($view->id() == 'construction_map') {
    // Get the values for portlandmaps_id and portlandmaps_layer
    $layer_list = [];
    $id_list = [];
    foreach ($view->result as $key => $value) {
      $entity = $value->_item->getOriginalObject()->getEntity();
      if (!$entity->field_portlandmaps_id || !$entity->field_portlandmaps_layer) continue;

      if ($entity->field_load_map_from_portlandmaps->value) {
        $entity->field_geo_map->value = '';
      }
      else {
        continue;
      }

      $map_id = $entity->field_portlandmaps_id->value;
      if ($map_id != null) {
        $id_list[] = $map_id;
      }

      $layer_id = $entity->field_portlandmaps_layer->value;
      if ($layer_id != null) {
        $layer_list[] = $layer_id;
      }
    }
    $view->element['#attached']['drupalSettings']['portlandmaps_id_list'] = $id_list;
    $view->element['#attached']['drupalSettings']['portlandmaps_layer_list'] = $layer_list;

  }
  else if ($view->id() == 'geo_map' && $view->total_rows == 1) {
    $entity = $view->result[0]->_entity;
    // If editor provides no geo_map value and choose NOT to load map from PortlandMaps, do not show the map
    if ($entity->bundle() === 'construction_project' && !$entity->field_geo_map->value &&
      !$entity->field_load_map_from_portlandmaps->value) {
      $view->result = [];
      $view->total_rows = 0;
    }
  }
  else if ($view->id() == 'neighborhoods' && $view->current_display == 'entity_view_map' && $view->total_rows == 1) {
    $entity = $view->result[0]->_entity;
    // If editor provides no map from PortlandMaps, do not show the map
    if (!$entity->field_portlandmaps_id->value || !$entity->field_portlandmaps_layer->value) {
      $view->result = [];
      $view->total_rows = 0;
    }
  }
}
