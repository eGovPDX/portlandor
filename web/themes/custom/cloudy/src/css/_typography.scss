/*
** Cloudy Design System Typography
**
** This file includes various helper functions, mixins, and maps that help to create the unified
** typography approach within the Cloudy design system.
*/

/*
** Helpers functions & mixins
*/

/// Remove the unit of a length
@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

/*
** Maps
*/

// heading type styles
$cloudy-heading-style-1: (
  default: (
    font-weight: 600,
    margin: 0 0 1rem,
    font-size: calc(#{strip-unit($cloudy-type-heading-01-font-size)} / #{strip-unit($cloudy-type-base-font-size)}) + rem,
    line-height: calc(#{strip-unit($cloudy-type-heading-01-line-height)} / #{strip-unit($cloudy-type-heading-01-font-size)}),
  ),
  md: (
    font-size: calc(#{strip-unit($cloudy-type-heading-01-md-font-size)} / #{strip-unit($cloudy-type-base-font-size)}) + rem,
    line-height: calc(#{strip-unit($cloudy-type-heading-01-md-line-height)} / #{strip-unit($cloudy-type-heading-01-md-font-size)}),
  )
);

$cloudy-heading-style-2: (
  default: (
    font-weight: 600,
    margin: 0 0 1rem,
    font-size: calc(#{strip-unit($cloudy-type-heading-02-font-size)} / #{strip-unit($cloudy-type-base-font-size)}) + rem,
    line-height: calc(#{strip-unit($cloudy-type-heading-02-line-height)} / #{strip-unit($cloudy-type-heading-02-font-size)}),
  ),
  md: (
    font-size: calc(#{strip-unit($cloudy-type-heading-02-md-font-size)} / #{strip-unit($cloudy-type-base-font-size)}) + rem,
    line-height: calc(#{strip-unit($cloudy-type-heading-02-md-line-height)} / #{strip-unit($cloudy-type-heading-02-md-font-size)}),
  )
);

$cloudy-heading-style-3: (
  default: (
    font-weight: 600,
    margin: 0 0 1rem,
    font-size: calc(#{strip-unit($cloudy-type-heading-03-font-size)} / #{strip-unit($cloudy-type-base-font-size)}) + rem,
    line-height: calc(#{strip-unit($cloudy-type-heading-03-line-height)} / #{strip-unit($cloudy-type-heading-03-font-size)}),
  ),
  md: (
    font-size: calc(#{strip-unit($cloudy-type-heading-03-md-font-size)} / #{strip-unit($cloudy-type-base-font-size)}) + rem,
    line-height: calc(#{strip-unit($cloudy-type-heading-03-md-line-height)} / #{strip-unit($cloudy-type-heading-03-md-font-size)}),
  )
);

$cloudy-heading-style-4: (
  default: (
    font-weight: 600,
    margin: 0 0 1rem,
    font-size: calc(#{strip-unit($cloudy-type-heading-04-font-size)} / #{strip-unit($cloudy-type-base-font-size)}) + rem,
    line-height: calc(#{strip-unit($cloudy-type-heading-04-line-height)} / #{strip-unit($cloudy-type-heading-04-font-size)}),
  ),
  md: (
    font-size: calc(#{strip-unit($cloudy-type-heading-04-md-font-size)} / #{strip-unit($cloudy-type-base-font-size)}) + rem,
    line-height: calc(#{strip-unit($cloudy-type-heading-04-md-line-height)} / #{strip-unit($cloudy-type-heading-04-md-font-size)}),
  )
);

$cloudy-heading-style-5: (
  default: (
    font-weight: 600,
    margin: 0 0 1rem,
    font-size: calc(#{strip-unit($cloudy-type-heading-05-font-size)} / #{strip-unit($cloudy-type-base-font-size)}) + rem,
    line-height: calc(#{strip-unit($cloudy-type-heading-05-line-height)} / #{strip-unit($cloudy-type-heading-05-font-size)}),
  ),
  md: (
    font-size: calc(#{strip-unit($cloudy-type-heading-05-md-font-size)} / #{strip-unit($cloudy-type-base-font-size)}) + rem,
    line-height: calc(#{strip-unit($cloudy-type-heading-05-md-line-height)} / #{strip-unit($cloudy-type-heading-05-md-font-size)}),
  )
);

$cloudy-heading-style-6: (
  default: (
    font-weight: 600,
    margin: 0 0 1rem,
    font-size: calc(#{strip-unit($cloudy-type-heading-06-font-size)} / #{strip-unit($cloudy-type-base-font-size)}) + rem,
    line-height: calc(#{strip-unit($cloudy-type-heading-06-line-height)} / #{strip-unit($cloudy-type-heading-06-font-size)}),
  )
);

// Paragraph type styles
$cloudy-body-text-style: (
  default: (
    font-weight: 400,
    font-family: $cloudy-font-family-display,
    font-size: calc(#{strip-unit($cloudy-type-body-font-size)} / #{strip-unit($cloudy-type-base-font-size)}) + rem,
    line-height: calc(#{strip-unit($cloudy-type-body-line-height)} / #{strip-unit($cloudy-type-body-font-size)}),
  ),
  md: (
    line-height: calc(#{strip-unit($cloudy-type-body-md-line-height)} / #{strip-unit($cloudy-type-body-font-size)}),
  )
);

$cloudy-lead-text-style: (
  default: (
    font-weight: 400,
    font-size: calc(#{strip-unit($cloudy-lead-font-size)} / #{strip-unit($cloudy-type-base-font-size)}) + rem,
    line-height: calc(#{strip-unit($cloudy-lead-line-height)} / #{strip-unit($cloudy-lead-font-size)}),
    color: $cloudy-color-neutral-700,
  ),
);

$cloudy-helper-text-style: (
  default: (
    font-weight: 400,
    font-size: calc(#{strip-unit($cloudy-helper-text-font-size)} / #{strip-unit($cloudy-type-base-font-size)}) + rem,
    line-height: calc(#{strip-unit($cloudy-helper-text-line-height)} / #{strip-unit($cloudy-helper-text-font-size)}),
    color: $cloudy-color-neutral-800,
  ),
);

$cloudy-subtitle-text-style: (
  default: (
    font-weight: 400,
    font-size: calc(#{strip-unit($cloudy-subtitle-font-size)} / #{strip-unit($cloudy-type-base-font-size)}) + rem,
    line-height: calc(#{strip-unit($cloudy-subtitle-line-height)} / #{strip-unit($cloudy-subtitle-font-size)}),
  )
);

$cloudy-ui-text-style: (
  default: (
    font-weight: 400,
    font-size: calc(#{strip-unit($cloudy-ui-text-font-size)} / #{strip-unit($cloudy-type-base-font-size)}) + rem,
    line-height: calc(#{strip-unit($cloudy-ui-text-line-height)} / #{strip-unit($cloudy-ui-text-font-size)}),
  )
);

$cloudy-link-text-style: (
  default: (
    font-weight: inherit,
    font-family: $cloudy-font-family-display,
    color: $cloudy-color-blue-500,
    font-size: inherit,
  )
);

$cloudy-permalink-text-style: (
  default: (
    font-weight: 300,
    font-size: calc(#{strip-unit($cloudy-permalink-text-font-size)} / #{strip-unit($cloudy-type-base-font-size)}) + rem,
    line-height: calc(#{strip-unit($cloudy-permalink-text-line-height)} / #{strip-unit($cloudy-permalink-text-font-size)}),
    color: $cloudy-color-neutral-500,
  )
);

$cloudy-time-text-style: (
  default: (
    font-weight: 600,
    color: $cloudy-color-orange-500,
    font-size: calc(#{strip-unit($cloudy-time-text-font-size)} / #{strip-unit($cloudy-type-base-font-size)}) + rem,
    line-height: calc(#{strip-unit($cloudy-time-text-line-height)} / #{strip-unit($cloudy-time-text-font-size)}),
  ),
  md: (
    font-size: calc(#{strip-unit($cloudy-time-text-md-font-size)} / #{strip-unit($cloudy-type-base-font-size)}) + rem,
  )
);

// Heading methods
$cloudy-heading-1: $cloudy-heading-style-1;
$cloudy-heading-2: $cloudy-heading-style-2;
$cloudy-heading-3: $cloudy-heading-style-3;
$cloudy-heading-4: $cloudy-heading-style-4;
$cloudy-heading-5: $cloudy-heading-style-5;
$cloudy-heading-6: $cloudy-heading-style-6;

// Convenience methods
$cloudy-lead-text: $cloudy-lead-text-style;
$cloudy-body-text: $cloudy-body-text-style;
$cloudy-helper-text: $cloudy-helper-text-style;
$cloudy-subtitle-text: $cloudy-subtitle-text-style;
$cloudy-ui-text: $cloudy-ui-text-style;
$cloudy-link: $cloudy-link-text-style;
$cloudy-permalink: $cloudy-permalink-text-style;
$cloudy-time: $cloudy-time-text-style;

// Generate type style from map values
@mixin make-type-style($type-style-values) {
  font-family: $cloudy-font-family-display;
  font-size: map-get($type-style-values, font-size);
  font-weight: map-get($type-style-values, font-weight);
  line-height: map-get($type-style-values, line-height);
  margin: map-get($type-style-values, margin);
  color: map-get($type-style-values, color);
}

// heading-type passes in the heading variation
@mixin type-style($heading-type, $heading-breakpoints: $grid-breakpoints) {
  // Each breakpoint map in the heading variation
  @each $heading-breakpoint, $type-style-values in $heading-type {
    // if the map == default-, print map contents
    @if $heading-breakpoint == default {
      @include make-type-style($type-style-values);
    } @else {
      // if the heading variation has a breakpoint map that matches the breakpoints, get the breakpoint
      @if map-has-key($heading-breakpoints, $heading-breakpoint) {
        $heading-breakpoint: map-get($heading-breakpoints, $heading-breakpoint);
        // Apply breakpoint to media query and print the map's contents
        @media screen and (min-width: $heading-breakpoint) {
          @include make-type-style($type-style-values);
        }
      }
    }
  }
}

/*
** Cloudy Typography Implementation
**
** The below declarations apply the appropriate styling across global site elements
*/

html {
  font-size: $cloudy-type-base-font-size;
}

// Heading styles
h1,
.h1,
.cloudy-h1,
.page-title {
  @include type-style($cloudy-heading-1);
}

h2,
.h2,
.cloudy-h2 {
  @include type-style($cloudy-heading-2);
}

h3,
.h3,
.cloudy-h3 {
  @include type-style($cloudy-heading-3);
}

h4,
.h4,
.cloudy-h4 {
  @include type-style($cloudy-heading-4);
}

h5,
.h5,
.cloudy-h5 {
  @include type-style($cloudy-heading-5);
}

h6,
.h6,
.cloudy-h6 {
  @include type-style($cloudy-heading-6);
}

body {
  @include type-style($cloudy-body-text);
}

p,
.cloudy-p {
  @include type-style($cloudy-body-text);
}

a,
.cloudy-link {
  @include type-style($cloudy-link);
}

/*
** Helper classes
*/

.cloudy-lead-text {
  @include type-style($cloudy-lead-text);
}

.cloudy-subtitle-text {
  @include type-style($cloudy-subtitle-text);
}

.cloudy-helper-text {
  @include type-style($cloudy-helper-text);
}

.cloudy-time {
  @include type-style($cloudy-time);
}

.cloudy-ui-text {
  @include type-style($cloudy-ui-text);
}

/* Content Region typography application */
