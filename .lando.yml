name: portlandor
recipe: pantheon
config:
  framework: drupal9
  site: portlandor
  id: 5c6715db-abac-4633-ada8-1c9efe354629
  index: false
  edge: false
  cache: false
  composer_version: 2
services:
  appserver:
    build:
      - "/app/vendor/bin/phpcs --config-set installed_paths /app/vendor/drupal/coder/coder_sniffer"
    run_as_root:
      - /bin/sh -c "if [ ! -d /var/www/.terminus/plugins/terminus-secrets-plugin ]; then { mkdir -p /var/www/.terminus/plugins; composer create-project -d /var/www/.terminus/plugins pantheon-systems/terminus-secrets-plugin:~1; chown -R www-data:www-data /var/www/.terminus; } fi"
      - ln -sf /usr/local/bin/composer /app/vendor/bin/composer
    xdebug: false
    config:
      php: xdebug.ini
    overrides:
      environment:
        XDEBUG_MODE:
        DRUSH_OPTIONS_URI: "https://portlandor.lndo.site"
  node:
    type: node:custom
    globals:
      yarn: latest
    overrides:
      image: cimg/php:7.4-browsers
    build_as_root:
      - /bin/sh -c "mkdir /home/node"
      - /bin/sh -c "chmod -R 777 /home/node"
    run_as_root:
      - /bin/sh -c "adduser www-data node"
      - /bin/sh -c "adduser www-data dialout"
      - /bin/sh -c "adduser node dialout"
      - /bin/sh -c "chmod -R 777 /var/www"

tooling:
  drush:
    description: CUSTOM Run drush commands
    service: appserver
    cmd: drush --root=/app/web
  drupalcs:
    service: appserver
    cmd: "/app/vendor/bin/phpcs --standard=Drupal,DrupalPractice"
    description: Run phpcs Drupal Coding Standards against a given file or directory.
  drupalcbf:
    service: appserver
    cmd: "/app/vendor/bin/phpcbf --standard=Drupal"
    description: Automatically fix Drupal coding standards suggestions.
  yarn:
    description: CUSTOM Run yarn commands
    service: node
    cmd: yarn --cwd /app/web/themes/custom/cloudy
  yarn-percy:
    description: CUSTOM Run yarn commands
    service: node
    cmd: yarn --cwd /app/tests/percy
  jest:
    description: CUSTOM Run Jest tests
    dir: /app/tests/percy
    cmd:
      - appserver: drush uli > superAdmin_uli.log
      - appserver: drush uli --mail xinju.wang@portlandoregon.gov > superAdmin_uli_2.log
      - appserver: drush uli --mail ally.admin@portlandoregon.gov > ally_uli.log
      - appserver: drush uli --mail marty.member@portlandoregon.gov > marty_uli.log
      - node: npm run jest-test
  jest-full:
    description: CUSTOM Run full regression Jest tests
    dir: /app/tests/percy
    cmd:
      - appserver: drush uli > superAdmin_uli.log
      - appserver: drush uli --mail ally.admin@portlandoregon.gov > ally_uli.log
      - appserver: drush uli --mail marty.member@portlandoregon.gov > marty_uli.log
      - node: npm run jest-full
  yarn-rebuild:
    description: CUSTOM Install Cloudy dependencies, rebuild Cloudy theme including pattern labs files
    service: node
    cmd: "cd /app/web/themes/custom/cloudy && yarn install --ignore-engines --frozen-lockfile && yarn run build"
  node:
    description: CUSTOM Run node commands
    service: node
  latest:
    description: CUSTOM Download and import the latest database from Dev
    cmd:
      - appserver: mkdir -p /app/artifacts
      - appserver: echo "Downloading latest database..."
      - appserver: rm -f /app/artifacts/database.tar.gz
      - appserver: terminus backup:get portlandor.dev --element=database --to=/app/artifacts/database.tar.gz
      - database: echo "Importing database..."
      - database: cd /app && /helpers/sql-import.sh artifacts/database.tar.gz
  demo:
    description: CUSTOM Download and import the latest test content from a demo backup
    cmd:
      - appserver: mkdir -p /app/artifacts
      - appserver: echo "Downloading latest database..."
      - appserver: rm -f /app/artifacts/demo-database.tar.gz
      - appserver: terminus backup:get portlandor.demo --element=database --to=/app/artifacts/demo-database.tar.gz
      - database: echo "Importing database..."
      - database: cd /app && /helpers/sql-import.sh artifacts/demo-database.tar.gz
      - appserver: echo "Clearing cache..."
      - appserver: drush cr -y
  refresh:
    description: CUSTOM Refresh branch by installing Composer dependencies and importing Drupal config, etc. Run after every merge from master.
    cmd:
      - appserver: date +"%T"
      - appserver: ln -sf /usr/local/bin/composer /app/vendor/bin/composer
      - appserver: /bin/bash -c "if [[ \$(composer install --dry-run -d /app 2>&1 | grep -oPc 'Removing drupal/\S+') -gt 0 ]]; then { echo Composer is about to remove one or more modules... Let\'s disable them in Drupal first.; for module in \$(composer install --dry-run -d /app 2>&1 | grep -oP 'Removing drupal/\K\S+'); do { echo Disabling \$module...; drush pmu \$module -y;} done } fi || true"
      - appserver: echo "=====Timestamp===== Starting Drupal Config Refresh"
      - appserver: date +"%T"
      - appserver: echo "Installing Composer dependencies..."
      - appserver: composer install -d /app
      - appserver: date +"%T"
      - appserver: echo "Clearing cache..."
      - appserver: drush cr -y
      - appserver: date +"%T"
      - appserver: echo "Run drush updb -y..."
      - appserver: drush updb -y
      - appserver: date +"%T"
      - appserver: echo "Run drush cim -y..."
      - appserver: drush cim -y
      - appserver: date +"%T"
      - appserver: echo "Clearing cache..."
      - appserver: drush cr -y
      - appserver: date +"%T"
      - appserver: echo "=====Timestamp===== Drupal Config Refresh Done, Starting Theme Rebuild"
      - appserver: date +"%T"
      - node: echo "Building theme asset files..."
      - node: cd /app/web/themes/custom/cloudy && yarn run build
      - node: echo "=====Timestamp===== Theme Rebuild Done"
      - node: date +"%T"
  cupex:
    description: CUSTOM Composer update, database update, and config export to get a clean module or theme update
    cmd:
      - appserver: echo "Updating Composer dependencies..."
      - appserver: composer update
      - appserver: echo "Run database updates..."
      - appserver: drush updb -y
      - appserver: echo "Exporting Drupal config..."
      - appserver: drush cex -y
  xdebug-on:
    service: appserver
    description: CUSTOM Enable xdebug for nginx.
    cmd: docker-php-ext-enable xdebug && pkill -o -USR2 php-fpm && echo "Enabling xdebug"
    user: root
  xdebug-off:
    service: appserver
    description: CUSTOM Disable xdebug for nginx.
    cmd: rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && pkill -o -USR2 php-fpm && echo "Disabling xdebug"
    user: root
  chromedriver:
    service: chromedriver
    description: CUSTOM Run chromedriver commands
