name: portlandor
recipe: pantheon
config:
  framework: drupal8
  site: portlandor
  id: 5c6715db-abac-4633-ada8-1c9efe354629
  index: false
  edge: false
  cache: false
services:
  appserver:
    build_as_root:
      - /bin/sh -c "cp /app/cop_ca_*.crt /usr/local/share/ca-certificates/"
      - update-ca-certificates
    run_as_root:
      - /bin/sh -c "if [ ! -d /var/www/.terminus/plugins/terminus-secrets-plugin ]; then { mkdir -p /var/www/.terminus/plugins; composer create-project -d /var/www/.terminus/plugins pantheon-systems/terminus-secrets-plugin:~1; chown -R www-data:www-data /var/www/.terminus; } fi"
    xdebug: false
    config:
      conf: xdebug.ini
    overrides:
      environment:
        BEHAT_PARAMS: '{"extensions" : {"Behat\\MinkExtension" : {"base_url" : "https://portlandor.lndo.site"}, "Drupal\\DrupalExtension" : {"drush" :   {  "root":  "/app/web" }}}}'
        MINK_DRIVER_ARGS: '["chrome", null, "http://chromedriver:4444/wd/hub"]'
        MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", null, "http://chromedriver:4444/wd/hub"]'
        MINK_DRIVER_CLASS: 'Drupal\FunctionalJavascriptTests\DrupalSelenium2Driver'
  node:
    type: node
    overrides:
      environment:
        # LANDO_WEBROOT_USER: www-data
        # LANDO_WEBROOT_GROUP: node
        NODE_EXTRA_CA_CERTS: /app/cop_ca.pem
    build_as_root:
      - apt-get update -y && apt-get upgrade -y
      - apt-get install php -y
    build:
      - echo "Updating npm..."
      - npm install -g npm
    run_as_root:
      - /bin/sh -c "adduser www-data node"
      - /bin/sh -c "adduser www-data dialout"
      - /bin/sh -c "adduser node dialout"
      - /bin/sh -c "chmod -R 775 /var/www"
    run:
      - echo "Installing Node.js dependencies..."
      - cd /app/web/themes/custom/cloudy && npm install
  chromedriver:
    type: compose
    services:
      image: robcherry/docker-chromedriver:latest
      expose:
        - "4444"
      environment:
        CHROMEDRIVER_WHITELISTED_IPS: ""
        CHROMEDRIVER_URL_BASE: "/wd/hub"
      security_opt:
        - seccomp:unconfined
      command: ["/usr/local/bin/supervisord", "-c", "/etc/supervisord.conf"]

events:
  post-start:
    - node: /bin/sh -c "chmod -R 775 /var/www"
    - node: echo "Building theme asset files..."
    - node: cd /app/web/themes/custom/cloudy && npm run build
tooling:
  drush:
    description: Run drush commands
    service: appserver
    cmd: drush --root=/app/web
  npm:
    description: Run npm commands
    service: node
    cmd: cd /app/web/themes/custom/cloudy && npm
  node:
    description: Run node commands
    service: node
  latest:
    description: Download and import the latest database from Dev
    cmd:
      - appserver: mkdir -p /app/artifacts
      - appserver: echo "Downloading latest database..."
      - appserver: rm -f /app/artifacts/database.tar.gz
      - appserver: terminus backup:get portlandor.dev --element=database --to=/app/artifacts/database.tar.gz
      - database: echo "Importing database..."
      - database: cd /app && /helpers/sql-import.sh artifacts/database.tar.gz
      - appserver: echo "Clearing cache..."
      - appserver: drush cr -y
  demo:
    description: Download and import the latest test content from a demo backup
    cmd:
      - appserver: mkdir -p /app/artifacts
      - appserver: echo "Downloading latest database..."
      - appserver: rm -f /app/artifacts/demo-database.tar.gz
      - appserver: terminus backup:get portlandor.demo --element=database --to=/app/artifacts/demo-database.tar.gz
      - database: echo "Importing database..."
      - database: cd /app && /helpers/sql-import.sh artifacts/demo-database.tar.gz
      - appserver: echo "Clearing cache..."
      - appserver: drush cr -y
  refresh:
    description: Refresh branch by installing Composer dependencies and importing Drupal config, etc. Run after every merge from master.
    cmd:
      - appserver: echo "Installing Composer dependencies..."
      - appserver: composer install -d /app
      - appserver: echo "Clearing cache..."
      - appserver: drush cr -y
      - appserver: echo "Run database updates..."
      - appserver: drush updb -y
      - appserver: echo "Importing Drupal config..."
      - appserver: drush cim -y
      - appserver: echo "Running cron..."
      - appserver: drush core:cron -y
      - appserver: echo "Clearing cache..."
      - appserver: drush cr -y
      - node: echo "Building theme asset files..."
      - node: cd /app/web/themes/custom/cloudy && npm run build
  cupex:
    description: Composer update, database update, and config export to get a clean module or theme update
    cmd:
      - appserver: echo "Updating Composer dependencies..."
      - appserver: composer update
      - appserver: echo "Run database updates..."
      - appserver: drush updb -y
      - appserver: echo "Exporting Drupal config..."
      - appserver: drush cex -y
  xdebug-on:
    service: appserver
    description: Enable xdebug for nginx.
    cmd: docker-php-ext-enable xdebug && pkill -o -USR2 php-fpm && echo "Enabling xdebug"
    user: root
  xdebug-off:
    service: appserver
    description: Disable xdebug for nginx.
    cmd: rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && pkill -o -USR2 php-fpm && echo "Disabling xdebug"
    user: root
  install-certs:
    description: Installs City of Portland certificate authority certificates used for SSL decryption
    service: appserver
    cmd:
      - /bin/sh -c "cp /app/cop_ca_*.crt /usr/local/share/ca-certificates/"
      - update-ca-certificates
    user: root
  behat:
    service: appserver
    description: Run behat tests
    cmd:
      - /app/vendor/bin/behat -c /app/tests/behat.yml
  chromedriver:
    service: chromedriver
    description: Run chromedriver commands
