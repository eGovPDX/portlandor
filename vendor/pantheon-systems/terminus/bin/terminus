#!/usr/bin/env php
<?php

/**
 * This script runs Terminus. It does the following:
 *   - Includes the Composer autoload file
 *   - Starts a container with the input, output, application, and configuration objects
 *   - Starts a runner instance and runs the command
 *   - Exits with a status code
 */

if (file_exists($path = __DIR__ . '/../vendor/autoload.php')
    || file_exists($path = __DIR__ . '/../../autoload.php')
    || file_exists($path = __DIR__ . '/../../../autoload.php')
) {
    include_once($path);
} else {
    throw new \Exception('Could not locate autoload.php');
}


use Pantheon\Terminus\Terminus;
use Pantheon\Terminus\Config\DefaultsConfig;
use Pantheon\Terminus\Config\DotEnvConfig;
use Pantheon\Terminus\Config\EnvConfig;
use Pantheon\Terminus\Config\YamlConfig;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Console\Output\ConsoleOutput;

// Create the input and output objects for Terminus to run against.
$input = new ArgvInput($_SERVER['argv']);
$output = new ConsoleOutput();

// Create a config object.
$config = new DefaultsConfig();
$config->extend(new YamlConfig($config->get('root') . '/config/constants.yml'));
$config->extend(new YamlConfig($config->get('user_home') . '/.terminus/config.yml'));
$config->extend(new DotEnvConfig(getcwd()));
$config->extend(new EnvConfig());

// Running Terminus
// @TODO: Figure out if and why we need to pass input/output twice and define what happens if we use different objects for each call.
$terminus = new Terminus($config, $input, $output);
$status_code = $terminus->run($input, $output);
exit($status_code);
